ARG SOURCE_CODE=.

# BEGIN -- workaround lack of go-toolset for golang 1.23
ARG GOLANG_IMAGE=registry-proxy.engineering.redhat.com/rh-osbs/openshift-golang-builder@sha256:b848cf648a383b6e207ebd150afc7e65a90efe0d7734f4f6d2767144d58d68d0
FROM ${GOLANG_IMAGE} AS golang

FROM registry.access.redhat.com/ubi8/ubi@sha256:fd93fc09dc09f3d3edae30577460a979bb52df351b826ef3a5c02ec8213b433a AS builder

ARG GOLANG_VERSION=1.23.0

# Install system dependencies
RUN dnf upgrade -y && dnf install -y \
    gcc \
    make \
    openssl-devel \
    && dnf clean all && rm -rf /var/cache/yum

# Install Go
ENV PATH=/usr/local/go/bin:$PATH

ARG GOLANG_DIR=/usr/lib/golang
COPY --from=golang ${GOLANG_DIR} /usr/local/go
# End of Go versioning workaround

WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY . .

# Build
USER root
RUN CGO_ENABLED=1 GOOS=linux GO111MODULE=on go build -tags strictfipsruntime -a -o manager cmd/training-operator.v1/main.go

# Runtime
FROM registry.redhat.io/ubi8/ubi-minimal@sha256:d16d4445b1567f29449fba3b6d2bc37db467dc3067d33e940477e55aecdf6e8e AS runtime

ARG USER=65532

LABEL com.redhat.component="odh-training-operator-container" \
      name="managed-open-data-hub/odh-training-operator-rhel8" \
      description="Training Operator is a Kubernetes-native project for fine-tuning and scalable distributed training of AI/ML models created with various frameworks such as PyTorch." \
      summary="odh-training-operator" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.openshift.expose-services="" \
      io.k8s.display-name="odh-training-operator" \
      io.k8s.description="odh-training-operator" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"

RUN microdnf update && microdnf install -y bind-utils

WORKDIR /
COPY --from=builder /workspace/manager .
## Create a non-root user with UID 65532 and switch to it
USER ${USER}:${USER}
ENTRYPOINT ["/manager"]
